"""
Django settings for bowcraftorg project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os

from pathlib import Path

from django.contrib.messages import constants as messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'tu_zi=0i2(5sj463+7c39=c31g^p_+vve22809z-(#(@6q7&&('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    # installed in process

    'corsheaders',
    'rest_framework',

    'crispy_forms', # for crispy forms
    'extra_views', # for formset view generic
    'channels', # for chat(with websockets), channels
    'ckeditor', # for richtextfield
    'ckeditor_uploader', # for upload images through richtextfield
    'taggit', # for tags db working
    'django_filters', # filters stuff
    'bootstrapform', # bootstrap styling
    'captcha',


    # my apps

    'mainapp.apps.MainappConfig',
    'forum.apps.ForumConfig',
    'todo.apps.TodoConfig',
    'authentication.apps.AuthenticationConfig',
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'bowcraftorg.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries':{
            'forum_extras':'forum.templatetags.forum_extras',
            }
        },
    },
]

WSGI_APPLICATION = 'bowcraftorg.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'TEST': {
            'NAME': os.path.join(BASE_DIR, 'db_test.sqlite3')
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'


STATICFILES_DIRS = (
os.path.join(BASE_DIR, 'assets'),
)

MEDIA_URL = '/images/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')


# crispy forms
CRISPY_TEMPLATE_PACK = 'bootstrap4'
CRISPY_FAIL_SILENTLY = not DEBUG

# login redirect
LOGIN_REDIRECT_URL = 'mainapp:news-page'
LOGOUT_REDIRECT_URL = 'mainapp:news-page'


# try that
LOGIN_URL = 'authentication:login'

# email setup

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'perematom@gmail.com'
EMAIL_HOST_PASSWORD = 'bn3264ph bn3264ph'


# ckedior settings

CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'width': 'auto',
        'toolbar_Custom' : [
        ['Bold', 'Italic', 'Underline', 'Strike', 'Link', 'Image']],
        'height': '300px',
    },
}

CKEDITOR_ALLOW_NONIMAGE_FILES = False


# tagging setting
FORCE_LOWERCASE_TAGS = True



# settings of django-rest framework


CORS_ORIGIN_WHITELIST = [
     'http://localhost:3000'
]


# setting up the messages by django

MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
 }



# captcha output format 
CAPTCHA_OUTPUT_FORMAT = None
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']


# # ASGI application configuration


ASGI_APPLICATION = 'bowcraftorg.asgi.application'




